{
  "_args": [
    [
      {
        "raw": "preact-compat",
        "scope": null,
        "escapedName": "preact-compat",
        "name": "preact-compat",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa"
    ]
  ],
  "_from": "preact-compat@latest",
  "_id": "preact-compat@3.16.0",
  "_inCache": true,
  "_location": "/preact-compat",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/preact-compat-3.16.0.tgz_1493597318230_0.9608725768048316"
  },
  "_npmUser": {
    "name": "developit",
    "email": "jason@developit.ca"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "preact-compat",
    "scope": null,
    "escapedName": "preact-compat",
    "name": "preact-compat",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/preact-compat/-/preact-compat-3.16.0.tgz",
  "_shasum": "cf2bc1b2f8fca14900d68094f9e10b8b329cc41e",
  "_shrinkwrap": null,
  "_spec": "preact-compat",
  "_where": "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa",
  "amdName": "preactCompat",
  "author": {
    "name": "Jason Miller",
    "email": "jason@developit.ca"
  },
  "bugs": {
    "url": "https://github.com/developit/preact-compat/issues"
  },
  "dependencies": {
    "immutability-helper": "^2.1.2",
    "preact-render-to-string": "^3.6.0",
    "preact-transition-group": "^1.1.0",
    "prop-types": "^15.5.8",
    "standalone-react-addons-pure-render-mixin": "^0.1.1"
  },
  "description": "A React compatibility layer for Preact",
  "devDependencies": {
    "babel-core": "^6.14.0",
    "babel-eslint": "^7.0.0",
    "babel-loader": "^6.2.5",
    "babel-plugin-transform-react-jsx": "^6.8.0",
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.11.1",
    "babel-preset-stage-0": "^6.5.0",
    "chai": "^3.5.0",
    "cross-env": "^4.0.0",
    "cross-var": "^1.0.3",
    "diff": "^3.0.0",
    "es5-shim": "^4.5.9",
    "eslint": "^3.4.0",
    "gzip-size-cli": "^1.0.0",
    "karma": "^1.1.2",
    "karma-chai": "^0.1.0",
    "karma-chai-sinon": "^0.1.5",
    "karma-mocha": "^1.1.1",
    "karma-mocha-reporter": "^2.1.0",
    "karma-phantomjs-launcher": "^1.0.2",
    "karma-source-map-support": "^1.2.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^2.0.1",
    "mkdirp": "^0.5.1",
    "mocha": "^3.0.1",
    "npm-run-all": "^3.1.0",
    "phantomjs-prebuilt": "^2.1.10",
    "preact": "^8.1.0",
    "preact-jsx-chai": "^2.2.1",
    "pretty-bytes-cli": "^1.0.0",
    "rollup": "^0.41.1",
    "rollup-plugin-babel": "^2.6.1",
    "rollup-plugin-buble": "^0.15.0",
    "rollup-plugin-commonjs": "^7.0.0",
    "rollup-plugin-memory": "^2.0.0",
    "rollup-plugin-node-resolve": "^2.0.0",
    "sinon": "^1.17.5",
    "sinon-chai": "^2.8.0",
    "uglify-js": "^2.7.3",
    "webpack": "^1.13.2"
  },
  "directories": {},
  "dist": {
    "shasum": "cf2bc1b2f8fca14900d68094f9e10b8b329cc41e",
    "tarball": "https://registry.npmjs.org/preact-compat/-/preact-compat-3.16.0.tgz"
  },
  "gitHead": "6df291dc85841ffd051cbb9615a7077a72d4fef8",
  "homepage": "https://github.com/developit/preact-compat",
  "jsnext:main": "dist/preact-compat.es.js",
  "keywords": [
    "preact",
    "react",
    "compatibility"
  ],
  "license": "MIT",
  "main": "dist/preact-compat.js",
  "maintainers": [
    {
      "name": "developit",
      "email": "jason@developit.ca"
    }
  ],
  "minified:main": "dist/preact-compat.min.js",
  "module": "dist/preact-compat.es.js",
  "name": "preact-compat",
  "optionalDependencies": {},
  "peerDependencies": {
    "preact": ">=5"
  },
  "readme": "# preact-compat\n\n[![NPM](http://img.shields.io/npm/v/preact-compat.svg?style=flat)](https://www.npmjs.org/package/preact-compat)\n[![travis-ci](https://travis-ci.org/developit/preact-compat.svg?branch=master)](https://travis-ci.org/developit/preact-compat)\n\n\nThis module is a compatibility layer that makes React-based modules work with [Preact], without any code changes.\n\nIt provides the same exports as `react` and `react-dom`, meaning you can use your build tool of choice to drop it in where React is being depended on.\n\n\n> Interested? Here's an example project that uses `preact-compat` to work with an existing React library unmodified,\n> achieving more than 95% reduction in size:\n>\n> **[preact-compat-example](https://github.com/developit/preact-compat-example)**\n\n\n---\n\n\n## Why?\n\n> _... or really, \"why [preact]\"?_\n\nReact is a great library and a great concept, and has a large community of module authors creating high-quality components.\nHowever, these components are tightly coupled to React through the use of generic package imports _([example][1])_.\n\n[Preact] is a tiny _(3kb)_ implementation of the core value of React, and maintains a nearly identical API.\nWith a shim like this in place, it is possible to use other React-like libraries like Preact, without forking modules just to change their imports.\n\nThere are better long-term ways to solve the coupling issue, like using factory functions that accept **named** generic methods _(not just React DI)_,\nas [suggested by Eric Elliot][2]. However, since the React community has already authored so many modules in a more explicitly coupled manner, it's worth\nhaving a simple short-term solution for those who would like to liberate themselves from library lock-in.\n\n\n---\n\n## Installation\nYou need to install `preact-compat` first through npm:\n\n```bash\nnpm i --save preact-compat\n```\n\nNOTE: You need to have `preact` already installed, if you don't, install it like so:\n\n```bash\nnpm i --save preact\n```\n\n## Usage with Webpack\n\nUsing `preact-compat` with Webpack is easy.\n\nAll you have to do is add an alias for `react` and `react-dom`:\n\n```js\n{\n    // ...\n    resolve: {\n        alias: {\n            'react': 'preact-compat',\n            'react-dom': 'preact-compat',\n            // Not necessary unless you consume a module using `createClass`\n            'create-react-class': 'preact-compat/lib/create-react-class'\n        }\n    }\n    // ...\n}\n```\n\n\n## Usage with Browserify\n\nUsing `preact-compat` with Browserify is as simple as installing and configuring [aliasify](http://npm.im/aliasify).\n\nFirst, install it: `npm install --save-dev aliasify`\n\n... then in your `package.json`, configure aliasify to alias `react` and `react-dom`:\n\n```js\n{\n    // ...\n    \"aliasify\": {\n        \"aliases\": {\n            \"react\": \"preact-compat\",\n            \"react-dom\": \"preact-compat\",\n            // Not necessary unless you consume a module using `createClass`\n            \"create-react-class\": \"preact-compat/lib/create-react-class\"\n        }\n    }\n    // ...\n}\n```\n\n## Usage with Babel\n\nUsing `preact-compat` with Babel is easy.\n\nInstall the babel plugin for aliasing: `npm install --save-dev babel-plugin-module-resolver`\n\nAll you have to do is tell babel to process jsx with 'h' and add an alias for `react` and `react-dom` in your .babelrc:\n\n```js\n{\n    // ...\n    \"plugins\": [\n        [\"transform-react-jsx\", { \"pragma\":\"h\" }],\n        [\"module-resolver\", {\n        \"root\": [\".\"],\n        \"alias\": {\n            \"react\": \"preact-compat\",\n            \"react-dom\": \"preact-compat\",\n            // Not necessary unless you consume a module using `createClass`\n            \"create-react-class\": \"preact-compat/lib/create-react-class\"\n        }\n        }]\n    ],\n    \"presets\": [\n        \"react\"\n    ]\n    // ...\n}\n```\n\n\n## Once Aliased\n\nWith the above Webpack or Browserify aliases in place, existing React modules should work nicely:\n\n```js\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nclass Foo extends Component {\n    propTypes = {\n        a: React.PropTypes.string.isRequired\n    };\n    render() {\n        let { a, b, children } = this.props;\n        return <div {...{a,b}}>{ children }</div>;\n    }\n}\n\nrender((\n    <Foo a=\"a\">test</Foo>\n), document.body);\n```\n\n\n---\n\n\n## Use Without Webpack/Browserify\n\n`preact-compat` and its single dependency [`prop-types`](https://github.com/reactjs/prop-types) are both published as UMD modules as of `preact-compat` version `0.6`. This means you can use them via a `<script>` tag without issue:\n\n```html\n<script src=\"//unpkg.com/preact\"></script>\n<script src=\"//unpkg.com/proptypes\"></script>\n<script src=\"//unpkg.com/preact-compat\"></script>\n<script>\n    var React = preactCompat,\n        ReactDOM = preactCompat;\n    ReactDOM.render(<h1>Hello!</h1>, document.body);\n</script>\n```\n\nYou can see the above in action with this [JSFiddle Example](https://jsfiddle.net/developit/61cqu193/).\n\n\n---\n\n\n### PropTypes\n\n`preact-compat` adds support for validating PropTypes out of the box. This can be disabled the same way it is when using React, by defining a global `process.env.NODE_ENV='production'`.  PropType errors should work the same as in React - the [`prop-types`](https://github.com/reactjs/prop-types) module used here is published by the React team to replace PropTypes in React.\n\n<img src=\"http://i.imgur.com/tGT7Dvw.png\" width=\"650\" alt=\"PropType validation example output\" />\n\n\n\n## License\n\n[MIT]\n\n\n[preact]: https://github.com/developit/preact\n[MIT]: http://choosealicense.com/licenses/mit\n[1]: https://github.com/developit/preact-toolbox/blob/master/components/app/index.jsx#L1\n[2]: https://gist.github.com/ericelliott/7e05747b891673eb704b\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/developit/preact-compat.git"
  },
  "scripts": {
    "build": "npm-run-all transpile:* minify size",
    "lint": "eslint src test",
    "minify": "cross-var cross-env uglifyjs $npm_package_main -c dead_code,evaluate -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map",
    "prepublish": "npm-run-all build test",
    "release": "cross-var npm run -s build && git commit -am $npm_package_version && git tag $npm_package_version && git push --follow-tags && npm publish",
    "size": "printf \"gzip size: \" && cross-var cross-env gzip-size $npm_package_minified_main | pretty-bytes",
    "start": "node server.js",
    "test": "npm-run-all lint build test:karma",
    "test:karma": "karma start --single-run",
    "test:watch": "karma start",
    "transpile:es": "rollup -c --environment FORMAT:es",
    "transpile:umd": "rollup -c --environment FORMAT:umd"
  },
  "version": "3.16.0"
}
