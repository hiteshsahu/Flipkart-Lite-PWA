{"version":3,"sources":["../src/devServer.js"],"names":["devServer","proxy","reactHot","options","entry","Array","isArray","Object","assign","context","concat","post","postConfig","config","entryPointsToAdd","length","hot","historyApiFallback","inline","addDevEntryToAll","plugins","webpack","HotModuleReplacementPlugin","presentEntryPoints","devServerEntry","newEntryPoints","keys","forEach","chunkName","proxyRoutes","exclude","module","loaders","test","fileType"],"mappings":";;;;;AAAA;;;;;;kBAMeA,S;;;AAEfA,UAAUC,KAAV,GAAkBA,KAAlB;AACAD,UAAUE,QAAV,GAAqBA,QAArB;;AAEA;;;;;;;;AAQA,SAASF,SAAT,GAAgD;AAAA,MAA5BG,OAA4B,uEAAlB,EAAkB;AAAA,MAAdC,KAAc,uEAAN,IAAM;;AAC9C,MAAID,YAAY,OAAOA,OAAP,KAAmB,QAAnB,IAA+BE,MAAMC,OAAN,CAAcH,OAAd,CAA3C,CAAJ,EAAwE;AACtEC,YAAQD,OAAR;AACAA,cAAU,EAAV;AACD;;AAED,MAAI,CAACE,MAAMC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACzBA,YAAQA,QAAQ,CAAEA,KAAF,CAAR,GAAoB,EAA5B;AACD;;AAED,SAAOG,OAAOC,MAAP,CAAeC,OAAD,IAAa;AAChCA,YAAQT,SAAR,GAAoBS,QAAQT,SAAR,IAAqB,EAAEI,OAAO,EAAT,EAAaD,SAAS,EAAtB,EAAzC;AACAM,YAAQT,SAAR,CAAkBI,KAAlB,GAA0BK,QAAQT,SAAR,CAAkBI,KAAlB,CAAwBM,MAAxB,CAA+BN,KAA/B,CAA1B;AACAK,YAAQT,SAAR,CAAkBG,OAAlB,GAA4BI,OAAOC,MAAP,CAAc,EAAd,EAAkBC,QAAQT,SAAR,CAAkBG,OAApC,EAA6CA,OAA7C,CAA5B;;AAEA,WAAO,EAAP;AACD,GANM,EAMJ,EAAEQ,MAAMC,UAAR,EANI,CAAP;AAOD;;AAED,SAASA,UAAT,CAAqBH,OAArB,EAA8BI,MAA9B,EAAsC;AACpC,QAAMC,mBAAmBL,QAAQT,SAAR,CAAkBI,KAAlB,CAAwBW,MAAxB,GAAiC,CAAjC,GACrBN,QAAQT,SAAR,CAAkBI,KADG,GAErB,CAAE,6BAAF,CAFJ;;AAIA,SAAO;AACLJ,eAAWO,OAAOC,MAAP,CAAc;AACvBQ,WAAK,IADkB;AAEvBC,0BAAoB,IAFG;AAGvBC,cAAQ;AAHe,KAAd,EAIRT,QAAQT,SAAR,CAAkBG,OAJV,CADN;AAMLC,WAAOe,iBAAiBN,OAAOT,KAAP,IAAgB,EAAjC,EAAqCU,gBAArC,CANF;AAOLM,aAAS,CACP,IAAIX,QAAQY,OAAR,CAAgBC,0BAApB,EADO;AAPJ,GAAP;AAWD;;AAED,SAASH,gBAAT,CAA2BI,kBAA3B,EAA+CC,cAA/C,EAA+D;AAC7D,QAAMC,iBAAiB,EAAvB;;AAEAlB,SAAOmB,IAAP,CAAYH,kBAAZ,EAAgCI,OAAhC,CAAyCC,SAAD,IAAe;AACrD;AACA;AACAH,mBAAgBG,SAAhB,IAA8BJ,cAA9B;AACD,GAJD;;AAMA,SAAOC,cAAP;AACD;;AAED;;;;;AAKA,SAASxB,KAAT,CAAgB4B,WAAhB,EAA6B;AAC3B,SAAO,OAAO;AACZ7B,eAAW;AACTC,aAAO4B;AADE;AADC,GAAP,CAAP;AAKD;;AAED;;;;;;;AAOA,SAAS3B,QAAT,GAAiC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC/B,QAAM2B,UAAU3B,QAAQ2B,OAAR,IAAmB,kBAAnC;;AAEA,SAAQrB,OAAD,KAAc;AACnBsB,YAAQ;AACNC,eAAS,CAAC;AACRC,cAAMxB,QAAQyB,QAAR,CAAiB,wBAAjB,CADE;AAERJ,iBAASzB,MAAMC,OAAN,CAAcwB,OAAd,IAAyBA,OAAzB,GAAmC,CAAEA,OAAF,CAFpC;AAGRE,iBAAS,CAAE,WAAF;AAHD,OAAD;AADH;AADW,GAAd,CAAP;AASD","file":"devServer.js","sourcesContent":["/**\n * Webpack dev-server block.\n *\n * @see https://github.com/webpack/webpack-dev-server\n */\n\nexport default devServer\n\ndevServer.proxy = proxy\ndevServer.reactHot = reactHot\n\n/**\n * @param {object} [options]    See https://webpack.github.io/docs/configuration.html#devserver\n * @param {bool}   [options.historyApiFallback]\n * @param {bool}   [options.hot]\n * @param {bool}   [options.inline]\n * @param {string|string[]} [entry]   Defaults to 'webpack/hot/only-dev-server'\n * @return {Function}\n */\nfunction devServer (options = {}, entry = null) {\n  if (options && (typeof options === 'string' || Array.isArray(options))) {\n    entry = options\n    options = {}\n  }\n\n  if (!Array.isArray(entry)) {\n    entry = entry ? [ entry ] : []\n  }\n\n  return Object.assign((context) => {\n    context.devServer = context.devServer || { entry: [], options: {} }\n    context.devServer.entry = context.devServer.entry.concat(entry)\n    context.devServer.options = Object.assign({}, context.devServer.options, options)\n\n    return {}\n  }, { post: postConfig })\n}\n\nfunction postConfig (context, config) {\n  const entryPointsToAdd = context.devServer.entry.length > 0\n    ? context.devServer.entry\n    : [ 'webpack/hot/only-dev-server' ]\n\n  return {\n    devServer: Object.assign({\n      hot: true,\n      historyApiFallback: true,\n      inline: true\n    }, context.devServer.options),\n    entry: addDevEntryToAll(config.entry || {}, entryPointsToAdd),\n    plugins: [\n      new context.webpack.HotModuleReplacementPlugin()\n    ]\n  }\n}\n\nfunction addDevEntryToAll (presentEntryPoints, devServerEntry) {\n  const newEntryPoints = {}\n\n  Object.keys(presentEntryPoints).forEach((chunkName) => {\n    // It's fine to just set the `devServerEntry`, instead of concat()-ing the present ones.\n    // Will be concat()-ed by webpack-merge (see `createConfig()`)\n    newEntryPoints[ chunkName ] = devServerEntry\n  })\n\n  return newEntryPoints\n}\n\n/**\n * @param {object} proxyRoutes    { <path>: <target URL> }\n * @return {Function}\n * @see http://webpack.github.io/docs/webpack-dev-server.html#proxy\n */\nfunction proxy (proxyRoutes) {\n  return () => ({\n    devServer: {\n      proxy: proxyRoutes\n    }\n  })\n}\n\n/**\n * For adding the react-hot-loader to the JS loaders. Only when using\n * react-hot-loader before version 3.\n * @param {object} [options]\n * @param {RegExp, Function, string}  [options.exclude]   Directories to exclude.\n * @return {Function}\n */\nfunction reactHot (options = {}) {\n  const exclude = options.exclude || /\\/node_modules\\//\n\n  return (context) => ({\n    module: {\n      loaders: [{\n        test: context.fileType('application/javascript'),\n        exclude: Array.isArray(exclude) ? exclude : [ exclude ],\n        loaders: [ 'react-hot' ]\n      }]\n    }\n  })\n}\n"]}