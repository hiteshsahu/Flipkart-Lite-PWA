{"version":3,"sources":["../src/webpack.js"],"names":["addPlugins","customConfig","entryPoint","performance","resolveAliases","setContext","setDevTool","setOutput","sourceMaps","plugins","length","wpConfig","entry","normalizeEntry","Array","isArray","main","Object","keys","forEach","entryName","Error","performanceBudget","aliases","resolve","alias","contextPath","context","devtool","output","filename","basename","path","dirname"],"mappings":";;;;;;;AAIA;;;;;;QAGEA,U,GAAAA,U;QACAC,Y,GAAAA,Y;QACAC,U,GAAAA,U;QACAC,W,GAAAA,W;QACAC,c,GAAAA,c;QACAC,U,GAAAA,U;QACAC,U,GAAAA,U;QACAC,S,GAAAA,S;QACAC,U,GAAAA,U;;AAGF;;;AAlBA;;;;AAqBA,SAASR,UAAT,CAAqBS,OAArB,EAA8B;AAC5B,SAAOA,QAAQC,MAAR,GAAiB,CAAjB,GACH,OAAO,EAAED,gBAAF,EAAP,CADG,GAEH,OAAO,EAAP,CAFJ,CAD4B,CAGJ;AACzB;;AAED,SAASR,YAAT,CAAuBU,QAAvB,EAAiC;AAC/B,SAAO,MAAMA,QAAb;AACD;;AAED;;;;;;;AAOA,SAAST,UAAT,CAAqBU,KAArB,EAA4B;AAC1B,SAAO,OAAO;AACZA,WAAOC,eAAeD,KAAf;AADK,GAAP,CAAP;AAGD;;AAED,SAASC,cAAT,CAAyBD,KAAzB,EAAgC;AAC9B,MAAIE,MAAMC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;AACxB,WAAO;AACLI,YAAMJ;AADD,KAAP;AAGD,GAJD,MAIO,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AACpC,WAAO;AACLI,YAAM,CAAEJ,KAAF;AADD,KAAP;AAGD,GAJM,MAIA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AACpCK,WAAOC,IAAP,CAAYN,KAAZ,EAAmBO,OAAnB,CAA4BC,SAAD,IAAe;AACxC,UAAI,CAACN,MAAMC,OAAN,CAAcH,MAAMQ,SAAN,CAAd,CAAL,EAAsC;AACpCR,cAAMQ,SAAN,IAAmB,CAAER,MAAMQ,SAAN,CAAF,CAAnB;AACD;AACF,KAJD;AAKA,WAAOR,KAAP;AACD,GAPM,MAOA;AACL,UAAM,IAAIS,KAAJ,CAAW,qEAAmET,KAAM,GAApF,CAAN;AACD;AACF;;AAED;;;;;;AAMA,SAAST,WAAT,CAAsBmB,iBAAtB,EAAyC;AACvC,SAAO,OAAO;AACZnB,iBAAamB;AADD,GAAP,CAAP;AAGD;;AAED;;;AAGA,SAASlB,cAAT,CAAyBmB,OAAzB,EAAkC;AAChC,SAAO,OAAO;AACZC,aAAS;AACPC,aAAOF;AADA;AADG,GAAP,CAAP;AAKD;;AAED;;;AAGA,SAASlB,UAAT,CAAqBqB,WAArB,EAAkC;AAChC,SAAO,OAAO;AACZC,aAAS,eAAKH,OAAL,CAAaE,WAAb;AADG,GAAP,CAAP;AAGD;;AAED;;;AAGA,SAASpB,UAAT,CAAqBsB,OAArB,EAA8B;AAC5B,SAAO,OAAO,EAAEA,gBAAF,EAAP,CAAP;AACD;;AAED;;;AAGA,SAASrB,SAAT,CAAoBsB,MAApB,EAA4B;AAC1B,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,aAAS;AACPC,gBAAU,eAAKC,QAAL,CAAcF,MAAd,KAAyB,WAD5B;AAEPG,YAAM,eAAKR,OAAL,CAAa,eAAKS,OAAL,CAAaJ,MAAb,KAAwB,SAArC;AAFC,KAAT;AAID;;AAED,SAAO,OAAO,EAAEA,cAAF,EAAP,CAAP;AACD;;AAED;;;;;;;;;AASA,SAASrB,UAAT,GAA0D;AAAA,MAArCoB,OAAqC,uEAA3B,yBAA2B;;AACxD,SAAQD,OAAD,IAAa;AAClBA,YAAQnB,UAAR,GAAqB,IAArB;AACA,WAAO,EAAEoB,gBAAF,EAAP;AACD,GAHD;AAID","file":"webpack.js","sourcesContent":["/*\n * Functions for use in @webpack-blocks/webpack and @webpack-blocks/webpack2.\n */\n\nimport path from 'path'\n\nexport {\n  addPlugins,\n  customConfig,\n  entryPoint,\n  performance,\n  resolveAliases,\n  setContext,\n  setDevTool,\n  setOutput,\n  sourceMaps\n}\n\n/**\n * @see https://webpack.github.io/docs/configuration.html#plugins\n */\nfunction addPlugins (plugins) {\n  return plugins.length > 0\n    ? () => ({ plugins })\n    : () => ({})          // since webpack-merge would otherwise clear the plugins array\n}\n\nfunction customConfig (wpConfig) {\n  return () => wpConfig\n}\n\n/**\n * Adds one or multiple entry points. If the parameter is not an object the\n * entry point(s) will be added to the default chunk named `main`.\n *\n * @param {object|string[]|string} entry\n * @see https://webpack.github.io/docs/configuration.html#entry\n */\nfunction entryPoint (entry) {\n  return () => ({\n    entry: normalizeEntry(entry)\n  })\n}\n\nfunction normalizeEntry (entry) {\n  if (Array.isArray(entry)) {\n    return {\n      main: entry\n    }\n  } else if (typeof entry === 'string') {\n    return {\n      main: [ entry ]\n    }\n  } else if (typeof entry === 'object') {\n    Object.keys(entry).forEach((entryName) => {\n      if (!Array.isArray(entry[entryName])) {\n        entry[entryName] = [ entry[entryName] ]\n      }\n    })\n    return entry\n  } else {\n    throw new Error(`Expected entry point to be object, array or string. Instead got: ${entry}`)\n  }\n}\n\n/**\n * @param {object} performanceBudget\n * @param {number} performanceBudget.maxAssetSize\n * @param {number} performanceBudget.maxEntrypointSize\n * @param {string} performanceBudget.hints              'warning' or 'error'\n */\nfunction performance (performanceBudget) {\n  return () => ({\n    performance: performanceBudget\n  })\n}\n\n/**\n * @see https://webpack.github.io/docs/configuration.html#resolve-alias\n */\nfunction resolveAliases (aliases) {\n  return () => ({\n    resolve: {\n      alias: aliases\n    }\n  })\n}\n\n/**\n * @see https://webpack.github.io/docs/configuration.html#context\n */\nfunction setContext (contextPath) {\n  return () => ({\n    context: path.resolve(contextPath)\n  })\n}\n\n/**\n * @see https://webpack.github.io/docs/configuration.html#devtool\n */\nfunction setDevTool (devtool) {\n  return () => ({ devtool })\n}\n\n/**\n * @see https://webpack.github.io/docs/configuration.html#output\n */\nfunction setOutput (output) {\n  if (typeof output === 'string') {\n    output = {\n      filename: path.basename(output) || 'bundle.js',\n      path: path.resolve(path.dirname(output) || './build')\n    }\n  }\n\n  return () => ({ output })\n}\n\n/**\n * Just a convenience wrapper to enable sourcemaps in an easier-to-read fashion\n * than `setDevTool()`.\n * @TODO: Only sets the javascript sourcemaps now. Would be nice to make loaders\n *        enable their specific sourcemaps when `sourceMaps()` is used.\n *\n * @param {string} [devtool]\n * @return {Function}\n */\nfunction sourceMaps (devtool = 'cheap-module-source-map') {\n  return (context) => {\n    context.sourceMaps = true\n    return { devtool }\n  }\n}\n"]}