{
  "_args": [
    [
      {
        "raw": "file-loader@^0.9.0",
        "scope": null,
        "escapedName": "file-loader",
        "name": "file-loader",
        "rawSpec": "^0.9.0",
        "spec": ">=0.9.0 <0.10.0",
        "type": "range"
      },
      "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\@webpack-blocks\\webpack2"
    ]
  ],
  "_from": "file-loader@>=0.9.0 <0.10.0",
  "_id": "file-loader@0.9.0",
  "_inCache": true,
  "_location": "/@webpack-blocks/webpack2/file-loader",
  "_nodeVersion": "6.2.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/file-loader-0.9.0.tgz_1466453877166_0.5333842861000448"
  },
  "_npmUser": {
    "name": "sokra",
    "email": "tobias.koppers@googlemail.com"
  },
  "_npmVersion": "3.8.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "file-loader@^0.9.0",
    "scope": null,
    "escapedName": "file-loader",
    "name": "file-loader",
    "rawSpec": "^0.9.0",
    "spec": ">=0.9.0 <0.10.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@webpack-blocks/webpack2"
  ],
  "_resolved": "https://registry.npmjs.org/file-loader/-/file-loader-0.9.0.tgz",
  "_shasum": "1d2daddd424ce6d1b07cfe3f79731bed3617ab42",
  "_shrinkwrap": null,
  "_spec": "file-loader@^0.9.0",
  "_where": "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\@webpack-blocks\\webpack2",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack/file-loader/issues"
  },
  "dependencies": {
    "loader-utils": "~0.2.5"
  },
  "description": "file loader module for webpack",
  "devDependencies": {
    "mocha": "~1.21.3",
    "should": "~4.0.4"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "1d2daddd424ce6d1b07cfe3f79731bed3617ab42",
    "tarball": "https://registry.npmjs.org/file-loader/-/file-loader-0.9.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "162c8faa32a235ff93ccdfdbb5edd45e7c22cfa0",
  "homepage": "https://github.com/webpack/file-loader",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    }
  ],
  "name": "file-loader",
  "optionalDependencies": {},
  "readme": "# file loader for webpack\r\n\r\n## Usage\r\n\r\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\r\n\r\n``` javascript\r\nvar url = require(\"file!./file.png\");\r\n// => emits file.png as file in the output directory and returns the public url\r\n// => returns i. e. \"/public-path/0dcbbaa701328a3c262cfd45869e351f.png\"\r\n```\r\n\r\nBy default the filename of the resulting file is the MD5 hash of the file's contents \r\nwith the original extension of the required resource.\r\n\r\nBy default a file is emitted, however this can be disabled if required (e.g. for server\r\nside packages).\r\n\r\n``` javascript\r\nvar url = require(\"file?emitFile=false!./file.png\");\r\n// => returns the public url but does NOT emit a file\r\n// => returns i. e. \"/public-path/0dcbbaa701328a3c262cfd45869e351f.png\"\r\n```\r\n\r\n## Filename templates\r\n\r\nYou can configure a custom filename template for your file using the query\r\nparameter `name`. For instance, to copy a file from your `context` directory\r\ninto the output directory retaining the full directory structure, you might\r\nuse `?name=[path][name].[ext]`.\r\n\r\n### Filename template placeholders\r\n\r\n* `[ext]` the extension of the resource\r\n* `[name]` the basename of the resource\r\n* `[path]` the path of the resource relative to the `context` query parameter or option.\r\n* `[hash]` the hash of the content, `hex`-encoded `md5` by default\r\n* `[<hashType>:hash:<digestType>:<length>]` optionally you can configure\r\n  * other `hashType`s, i. e. `sha1`, `md5`, `sha256`, `sha512`\r\n  * other `digestType`s, i. e. `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\r\n  * and `length` the length in chars\r\n* `[N]` the N-th match obtained from matching the current file name against the query param `regExp`\r\n\r\n## Examples\r\n\r\n``` javascript\r\nrequire(\"file?name=js/[hash].script.[ext]!./javascript.js\");\r\n// => js/0dcbbaa701328a3c262cfd45869e351f.script.js\r\n\r\nrequire(\"file?name=html-[hash:6].html!./page.html\");\r\n// => html-109fa8.html\r\n\r\nrequire(\"file?name=[hash]!./flash.txt\");\r\n// => c31e9820c001c9c4a86bce33ce43b679\r\n\r\nrequire(\"file?name=[sha512:hash:base64:7].[ext]!./image.png\");\r\n// => gdyb21L.png\r\n// use sha512 hash instead of md5 and with only 7 chars of base64\r\n\r\nrequire(\"file?name=img-[sha512:hash:base64:7].[ext]!./image.jpg\");\r\n// => img-VqzT5ZC.jpg\r\n// use custom name, sha512 hash instead of md5 and with only 7 chars of base64\r\n\r\nrequire(\"file?name=picture.png!./myself.png\");\r\n// => picture.png\r\n\r\nrequire(\"file?name=[path][name].[ext]?[hash]!./dir/file.png\")\r\n// => dir/file.png?e43b20c069c4a01867c31e98cbce33c9\r\n```\r\n\r\n## Installation\r\n\r\n```npm install file-loader --save-dev```\r\n\r\n## License\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack/file-loader.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "0.9.0"
}
