{
  "_args": [
    [
      {
        "raw": "ejs-loader@^0.3.0",
        "scope": null,
        "escapedName": "ejs-loader",
        "name": "ejs-loader",
        "rawSpec": "^0.3.0",
        "spec": ">=0.3.0 <0.4.0",
        "type": "range"
      },
      "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\preact-cli"
    ]
  ],
  "_from": "ejs-loader@>=0.3.0 <0.4.0",
  "_id": "ejs-loader@0.3.0",
  "_inCache": true,
  "_location": "/ejs-loader",
  "_nodeVersion": "5.10.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ejs-loader-0.3.0.tgz_1465394051319_0.042901744367554784"
  },
  "_npmUser": {
    "name": "okonet",
    "email": "andrey@okonet.ru"
  },
  "_npmVersion": "3.8.3",
  "_phantomChildren": {
    "big.js": "3.1.3",
    "emojis-list": "2.1.0",
    "json5": "0.5.1",
    "object-assign": "4.1.1"
  },
  "_requested": {
    "raw": "ejs-loader@^0.3.0",
    "scope": null,
    "escapedName": "ejs-loader",
    "name": "ejs-loader",
    "rawSpec": "^0.3.0",
    "spec": ">=0.3.0 <0.4.0",
    "type": "range"
  },
  "_requiredBy": [
    "/preact-cli"
  ],
  "_resolved": "https://registry.npmjs.org/ejs-loader/-/ejs-loader-0.3.0.tgz",
  "_shasum": "68736fdc231a490edf919a6446ad9d9055a587be",
  "_shrinkwrap": null,
  "_spec": "ejs-loader@^0.3.0",
  "_where": "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\preact-cli",
  "author": {
    "name": "Andrey Okonetchnikov",
    "email": "andrey@okonet.ru"
  },
  "bugs": {
    "url": "https://github.com/okonet/ejs-loader/issues"
  },
  "dependencies": {
    "loader-utils": "^0.2.7",
    "lodash": "^3.6.0"
  },
  "description": "EJS (Underscore/LoDash Templates) loader for webpack",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "68736fdc231a490edf919a6446ad9d9055a587be",
    "tarball": "https://registry.npmjs.org/ejs-loader/-/ejs-loader-0.3.0.tgz"
  },
  "gitHead": "e6773f9adb0e8827c2d591007c5c851266fee68a",
  "homepage": "https://github.com/okonet/ejs-loader",
  "keywords": [
    "ejs",
    "underscore",
    "lodash",
    "_",
    "webpack",
    "loader",
    "template"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "okonet",
      "email": "andrey@okonet.ru"
    }
  ],
  "name": "ejs-loader",
  "optionalDependencies": {},
  "readme": "# ejs-loader for webpack\n\nEJS (Underscore/LoDash Templates) loader for [webpack](http://webpack.github.io/). Uses [lodash template](http://lodash.com/docs#template) function to compile templates.\n\nIf you are looking for the loader which uses [EJS templating engine](https://github.com/tj/ejs), there is [ejs-compiled-loader](https://github.com/bazilio91/ejs-compiled-loader)\n\n## Installation\n\n`npm install ejs-loader`\n\n## Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n``` javascript\nvar template = require(\"ejs!./file.ejs\");\n// => returns the template function compiled with undesrcore (lodash) templating engine.\n\n// And then use it somewhere in your code\ntemplate(data) // Pass object with data\n```\n\nYou also should provide a global `_` variable with the lodash/underscore runtime. You can do it with the following webpack plugin: https://github.com/webpack/docs/wiki/list-of-plugins#provideplugin\n\n```\nplugins: [\n    new webpack.ProvidePlugin({\n        _: \"underscore\"\n    })\n]\n```\n\n### Options\n[Underscore](http://underscorejs.org/#template)/[Lodash](https://lodash.com/docs#template) options can be passed in using the querystring or adding an ```esjLoader``` options block to your configuration.\n\nConfig example using a querystring:\n``` js\nmodule.exports = {\n  module: {\n    loaders: [\n      { test: /\\.ejs$/, loader: 'ejs-loader?variable=data' },\n    ]\n  }\n};\n```\nis equivalent to\n``` js\nvar template = _.template('<%= template %>', { variable : 'data' });\n```\n\n``` js\nmodule.exports = {\n    module: {\n        loaders: [\n            {\n                test: /\\.ejs$/, \n                loader: 'ejs-loader', \n                query: { \n                    variable: 'data', \n                    interpolate : '\\\\{\\\\{(.+?)\\\\}\\\\}', \n                    evaluate : '\\\\[\\\\[(.+?)\\\\]\\\\]' \n                }\n            },\n        ]\n    }\n};\n```\nis equivalent to\n``` js\nvar template = _.template('<%= template %>', { variable: 'data', interpolate : '\\\\{\\\\{(.+?)\\\\}\\\\}', evaluate : '\\\\[\\\\[(.+?)\\\\]\\\\]' });\n```\n\nConfig example using the ```ejsLoader``` config block:\n``` js\nmodule.exports = {\n  module: {\n    loaders: [\n      { test: /\\.ejs$/, loader: 'ejs-loader',\n    ]\n  },\n  ejsLoader : {\n    variable    : 'data',\n    interpolate : /\\{\\{(.+?)\\}\\}/g,\n    evaluate    : /\\[\\[(.+?)\\]\\]/g\n  }\n};\n```\n\n## Release History\n* 0.3.0 - Allow passing template options via `ejsLoader` or via loader's `query`\n* 0.2.1 - Add ability to pass compiller options\n* 0.1.0 - Initial release\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/okonet/ejs-loader.git"
  },
  "scripts": {},
  "version": "0.3.0"
}
