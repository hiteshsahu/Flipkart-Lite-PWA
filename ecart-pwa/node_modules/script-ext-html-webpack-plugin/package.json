{
  "_args": [
    [
      {
        "raw": "script-ext-html-webpack-plugin@^1.8.0",
        "scope": null,
        "escapedName": "script-ext-html-webpack-plugin",
        "name": "script-ext-html-webpack-plugin",
        "rawSpec": "^1.8.0",
        "spec": ">=1.8.0 <2.0.0",
        "type": "range"
      },
      "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\preact-cli"
    ]
  ],
  "_from": "script-ext-html-webpack-plugin@>=1.8.0 <2.0.0",
  "_id": "script-ext-html-webpack-plugin@1.8.0",
  "_inCache": true,
  "_location": "/script-ext-html-webpack-plugin",
  "_nodeVersion": "7.9.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/script-ext-html-webpack-plugin-1.8.0.tgz_1494795549753_0.2287126611918211"
  },
  "_npmUser": {
    "name": "numical",
    "email": "mike.evans@numical.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "script-ext-html-webpack-plugin@^1.8.0",
    "scope": null,
    "escapedName": "script-ext-html-webpack-plugin",
    "name": "script-ext-html-webpack-plugin",
    "rawSpec": "^1.8.0",
    "spec": ">=1.8.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/preact-cli"
  ],
  "_resolved": "https://registry.npmjs.org/script-ext-html-webpack-plugin/-/script-ext-html-webpack-plugin-1.8.0.tgz",
  "_shasum": "0b9e9aec8c78bcd9cefbc5f6e21d2be7a15735cd",
  "_shrinkwrap": null,
  "_spec": "script-ext-html-webpack-plugin@^1.8.0",
  "_where": "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\preact-cli",
  "author": {
    "name": "Mike Evans",
    "email": "mike.evans@numical.com",
    "url": "https://github.com/numical"
  },
  "bugs": {
    "url": "https://github.com/numical/script-ext-html-webpack-plugin/issues"
  },
  "dependencies": {
    "debug": "^2.6.3"
  },
  "description": "Enhances html-webpack-plugin functionality with async and defer attributes for script elements",
  "devDependencies": {
    "css-loader": "^0.28.1",
    "dynavers": "^0.2.0",
    "handlebars": "^4.0.8",
    "handlebars-loader": "^1.5.0",
    "html-webpack-plugin": "^2.28.0",
    "jasmine": "^2.6.0",
    "jasmine-spec-reporter": "^4.1.0",
    "jasmine2-custom-message": "^0.8.2",
    "rimraf": "^2.6.1",
    "semistandard": "^11.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "0b9e9aec8c78bcd9cefbc5f6e21d2be7a15735cd",
    "tarball": "https://registry.npmjs.org/script-ext-html-webpack-plugin/-/script-ext-html-webpack-plugin-1.8.0.tgz"
  },
  "files": [
    "index.js",
    "lib/"
  ],
  "gitHead": "d956c1f7ddfdbab22f87af1501c95dd702f994d7",
  "homepage": "https://github.com/numical/script-ext-html-webpack-plugin",
  "keywords": [
    "webpack",
    "plugin",
    "html-webpack-plugin",
    "async",
    "defer",
    "inline",
    "script",
    "module",
    "resource hints",
    "prefetch",
    "preload",
    "dynamic script",
    "async script"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "numical",
      "email": "mike.evans@numical.com"
    }
  ],
  "name": "script-ext-html-webpack-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "1 || ^2.2.0"
  },
  "readme": "Script Extension for HTML Webpack Plugin\n========================================\n[![npm version](https://badge.fury.io/js/script-ext-html-webpack-plugin.svg)](http://badge.fury.io/js/script-ext-html-webpack-plugin) [![Dependency Status](https://david-dm.org/numical/script-ext-html-webpack-plugin.svg)](https://david-dm.org/numical/script-ext-html-webpack-plugin) [![Build status](https://travis-ci.org/numical/script-ext-html-webpack-plugin.svg)](https://travis-ci.org/numical/script-ext-html-webpack-plugin) [![js-semistandard-style](https://img.shields.io/badge/code%20style-semistandard-brightgreen.svg?style=flat-square)](https://github.com/Flet/semistandard)\n\n[![NPM](https://nodei.co/npm/script-ext-html-webpack-plugin.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/script-ext-html-webpack-plugin/)\n\n\nEnhances [html-webpack-plugin](https://github.com/ampedandwired/html-webpack-plugin)\nfunctionality with different deployment options for your scripts including:\n- [`async`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#Attributes) attribute;\n- [`defer`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#Attributes) attribute;\n- [`type=\"module\"`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#Attributes) attribute;\n- any custom attributes you wish to add;\n- inlining;\n- [`preload`](https://www.w3.org/TR/preload/) resource hint;\n- [`prefetch`](https://www.w3.org/TR/resource-hints/#dfn-prefetch) resource hint\n\nThis is an extension plugin for the [webpack](http://webpack.github.io) plugin [html-webpack-plugin](https://github.com/ampedandwired/html-webpack-plugin) - a plugin that simplifies the creation of HTML files to serve your webpack bundles.\n\nThe raw [html-webpack-plugin](https://github.com/ampedandwired/html-webpack-plugin) incorporates all webpack-generated javascipt as synchronous`<script>` elements in the generated html.  This plugin allows you to:\n- add standard and custom attributes to these elements;\n- inline the code in the elements;\n- add prefetch and preload resource hints for initial and dynamically loaded scripts.\n\nInstallation\n------------\nYou must be running webpack (1.x or 2.x) )on node 4+.\n\nInstall the plugin with npm:\n```shell\n$ npm install --save-dev script-ext-html-webpack-plugin\n```\n\nYou may see an `UNMET PEER DEPENDENCY` warning for webpack.\n\nThis is fine; in testing, we dynamically download multiple versions of webpack (via the [dynavers](https://github.com/numical/dynavers) module).\n\n\nBasic Usage\n-----------\nAdd the plugin to your webpack config as follows: \n\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin()\n]  \n```\nThe above configuration will actually do nothing due to the configuration defaults. Some more useful scenarios:\n\nAll scripts set to `async`:\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    defaultAttribute: 'async'\n  })\n]  \n```\n\nAll scripts set to `async` except 'first.js' which is sync:\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    sync: 'first.js',\n    defaultAttribute: 'async'\n  })\n]  \n```\n\nConfiguration offers much more complex options:\n\nConfiguration\n-------------\nYou must pass a hash of configuration options to the plugin to cause the addition of attributes:\n- `inline`: a __script matching pattern__ defining scripts that should be inlined in the html (default: `[]`);\n- `sync`: a  __script matching pattern__ defining script names that should have no attribute (default: `[]`);\n- `async`: a __script matching pattern__ defining script names that should have an `async` attribute (default: `[]`);\n- `defer`: a __script matching pattern__ defining script names that should have a `defer` attribute (default: `[]`);\n- `defaultAttribute`: `'sync' | 'async' | 'defer'` The default attribute to set - `'sync'` actually results in no attribute (default: `'sync'`);\n- `module`: a __script matching pattern__ defining script names that should have a\n`type=\"module\"` attribute (default: `[]`);\n- `preload`: a __script matching pattern__ defining scripts that should have accompanying preload resource hints (default: `[]`);\n- `prefetch`: a __script matching pattern__ defining scripts that should have accompanying prefetch resource hints (default: `[]`);\n- `custom`: a single hash or an array of hashes with the following structure:\n - `test`: a **script matching pattern** defining scripts that should have a custom attribute added;\n - `attribute`: a `String` attribute to add;\n - `value`: (optional) a `String` value for the attribute; if not set the attribute has no value set (equivalent of `true`).\n\nA __script matching pattern__ matches against a script's name.  It can be one of:\n- a `String`-  matches if it is a substring of the script name;\n- a `RegExp`;\n- an array of `String`'s and/or `RegExp`'s - matches if any one element matches;\n- a hash with property `test` with a value of one of the above.\n\nIn more complicated use cases it may prove difficult to ensure that the pattern matching for different attributes are mutually exclusive.  To prevent confusion, the plugin operates a simple precedence model:\n\n1. if a script name matches the`inline` script matching pattern, it will be inlined;\n\n2. if a script name matches the `sync` script matching pattern, it will have no attribute, *unless* it matched condition 1;\n\n3. if a script name the `async` script matching pattern, it will have the `async` attribute, *unless* it matched conditions 1 or 2;\n\n4. if a script name matches the `defer` script matching pattern, it will have the `defer` attribute, *unless* it matched conditions 1, 2 or 3;\n\n5. if a script name does not match any of the previous conditions, it will have the `defaultAttribute' attribute.\n\nThe `module` attribute is independent of conditions 2-5, but will be ignored if the script isinlined.\n\n\nDynamically Loaded Scripts\n--------------------------\nThe `preload` and `prefetch` configuration also have allow an additional property in the hash form that can be passed to include dynamically loaded (asynchronous) scripts.  This property is `chunks` and can have one of the following `String` values:\n- `initial`: default behaviour, no asynchronour scripts;\n- `async`: only asynchronouse scripts;\n- `all`: all scripts\nNote that you must still supply a `test` __script matching pattern__ which is also applied when selecting scripts.\n\n\nConfiguration Examples\n---------------------\n\nAll scripts with 'important' in their name are sync and all others set to `defer`:\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    sync: 'important'\n    defaultAttribute: 'defer'\n  })\n]  \n```\n\nAlternatively, using a regular expression:\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    sync: /important/,\n    defaultAttribute: 'defer'\n  })\n]  \n```\n\nAll scripts with 'mod' in their name are async and type 'module', all others are sync (no explicit setting for this as it is the default):\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    async: 'mod',\n    module: 'mod'\n  })\n]  \n```\n\nScript 'startup.js' is inlined whilst all other scripts are async and preloaded:\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    inline: 'startup',\n    preload: /\\.js$/,\n    defaultAttribute: 'async'\n  })\n]  \n```\n\nAll asynchronous scripts are added as `preload` resource hints.  All other scripts are `async`:\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    async: /\\.js$/\n    preload: {\n      test: /\\.js$/,\n      chunks: 'async'\n    }\n  })\n]  \n```\n\nAll scripts have custom attribute `type='text/paperscript'` and ui.js also has a custom attribute of `id='1235'`:\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    custom: [\n      {\n        test: /\\.js$/,\n        attribute: 'type',\n        value: 'text/paperscript'\n      },\n      {\n        test: 'ui.js',\n        attribute: 'id',\n        value: '12345'\n      }\n    ]\n  })\n]  \n```\n\nAnd so on, to craziness:\n```javascript\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    inline: 'startup',  \n    sync: [/imp(1|2){1,3}}/, 'initial'],\n    defer: ['slow', /big.*andslow/],\n    module: [/^((?!sync).)*/, 'mod'],\n    prefetch: 'indirectly-referenced.js',\n    defaultAttribute: 'async'\n  })\n]  \n```\n\nAny problems with real-world examples, just raise an issue.  \n\n\nA Note on Script Names\n----------------------\nIn the above examples the actual script names are used to select the deployment option.  You may not wish to couple asset names to your deployment like this.  Instead you can use [Webpack's entry configuration](https://webpack.js.org/concepts/entry-points/#object-syntax) to create aliases that the plugin will then use for its pattern matching. Your `webpack.config.js` will look something like this:\n```javascript\nentry: {\n  a: path.join(__dirname, 'lib/myFunctions.js'),\n  b: path.join(__dirname, 'lib/otherFunctions.js'),\n  c: path.join(__dirname, 'lib/criticalFuntions.js')\n},\noutput: {\n  ...\n  filename: '[name].js'\n}\nplugins: [\n  new HtmlWebpackPlugin(),\n  new ScriptExtHtmlWebpackPlugin({\n    inline: ['c'],  \n    defer: ['a', 'b']\n  })\n]  \n```\n\n\nInlining\n--------\nSeveral notes and caveats apply:\n* This feature is for `<script>`'s only. If you wish to inline css please see the sister plugin\n[style-ext-html-webpack-plugin](https://github.com/numical/style-ext-html-webpack-plugin).\n* Even the simplest script will be wrapped with webpack boilerplate; ensure you minify your javascript if you want your output html to be legible!\n* Hot replacement of inlined scripts will only work if caching is [switched off](https://github.com/ampedandwired/html-webpack-plugin#configuration) for html-webpack-plugin:\n```javascript\nplugins: [\n    new HtmlWebpackPlugin({\n      cache: false\n    }),\n    new ScriptExtHtmlWebpackPlugin({\n      inline: ['myinlinedscript.js']\n    })\n]\n```\n* An alternative approach, based on jade templates is illustrated in the [HtmlWebpackPlugin inline example](https://github.com/ampedandwired/html-webpack-plugin/tree/master/examples/inline).\n\n\nResource Hints\n--------------\nIn most cases, modern browsers will intelligently preload referenced script assets.\nHowever if you wish, this plugin can add resource hint elements to the `<head>` element of the form:\n```html\n<link rel=\"[preload|prefetch]\" href=\"[scriptname]\" as=\"script\">\n```\nUse the `preload` and `prefetch` configuration options.\nWhere `preload` and `prefetch` patterns overlap, `preload` takes precedence.\n\nPossibly a more compelling use case is to preload/prefetch dynamically loaded scripts generated by Webpack's [code splitting](https://webpack.js.org/guides/code-splitting-require). Since v1.7.0, this plugin can do this - see 'Dynamically Loaded Scripts' above.\n\n\nNotes:\n- for more on resource hints, see the [`w3c`](https://www.w3.org/TR/resource-hints) definition;  \n- for a more complete solution that allows the preloading\\fetching of assets other than scripts, see the [resource-hints-webpack-plugin](https://github.com/jantimon/resource-hints-webpack-plugin).\n\n\n\nChange History\n--------------\n\nv1.8.x\n* added custom attributes\n\nv1.7.x\n* updated for Webpack 2.5.x and updated all dependencies\n* adds asynchronous script resource hints\n* fixed [issue 13](https://github.com/numical/script-ext-html-webpack-plugin/issues/13) - inline functionality not working with HtmlWebpackPlugin hashing\n* fixed [issue 16](https://github.com/numical/script-ext-html-webpack-plugin/issues/16) - unnecessary <link> closing tag\n* fixed [issue 18](https://github.com/numical/script-ext-html-webpack-plugin/issues/18) - added defensive coding against unpopulated event arguments\n* refactored for better handling of `publicPath` - thanks @koalaink\n\nv1.6.x\n* works with webpack 2.2.1\n* enhanced API (no need to use array), fully backwardly compatible\n* refactor in preparation for v2\n\nv1.5.x\n* added resource hints\n* works with webpack 2.2.0\n\nv1.4.x\n* updated internal mechanism to use new(ish) [HtmlWebpackPlugin event](https://github.com/ampedandwired/html-webpack-plugin#events)\n* improved test mechanism and enhanced test coverage\n* added support for `publicPath` for inline scripts (thanks @JustAboutJeff)\n* works with 'webpack -p' (thanks @brandongoode)\n\nv1.3.x\n* added `type=\"text/javascript\"` by default, in response to [Safari 9.1.1 bug](https://github.com/ampedandwired/html-webpack-plugin/issues/309)\n* removed experimental status of inline option\n* added weback 2.2.x beta support\n\nv1.2.x\n* added inline option\n\nv1.1.x\n* added `type=\"module\"` option\n\nv1.0.x\n* initial release\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/numical/script-ext-html-webpack-plugin.git"
  },
  "scripts": {
    "debug": "DEBUG=ScriptExt VERSION=webpack2 jasmine",
    "node-debug": "DEBUG=ScriptExt VERSION=webpack1 node-debug jasmine",
    "pretest": "semistandard & install-module-versions dynavers.json",
    "test": "VERSION=webpack1 jasmine && VERSION=webpack2 jasmine",
    "test:webpack1": "VERSION=webpack1 jasmine",
    "test:webpack2": "VERSION=webpack2 jasmine"
  },
  "version": "1.8.0"
}
