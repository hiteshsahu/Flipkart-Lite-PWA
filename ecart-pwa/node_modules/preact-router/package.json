{
  "_args": [
    [
      {
        "raw": "preact-router",
        "scope": null,
        "escapedName": "preact-router",
        "name": "preact-router",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa"
    ]
  ],
  "_from": "preact-router@latest",
  "_id": "preact-router@2.5.2",
  "_inCache": true,
  "_location": "/preact-router",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/preact-router-2.5.2.tgz_1492999026865_0.18502314784564078"
  },
  "_npmUser": {
    "name": "developit",
    "email": "jason@developit.ca"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "preact-router",
    "scope": null,
    "escapedName": "preact-router",
    "name": "preact-router",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/preact-router/-/preact-router-2.5.2.tgz",
  "_shasum": "15402f809f7236006e40214fcffadcac409bd693",
  "_shrinkwrap": null,
  "_spec": "preact-router",
  "_where": "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa",
  "amdName": "preactRouter",
  "author": {
    "name": "Jason Miller",
    "email": "jason@developit.ca"
  },
  "bugs": {
    "url": "https://github.com/developit/preact-router/issues"
  },
  "dependencies": {},
  "description": "Connect your components up to that address bar.",
  "devDependencies": {
    "babel-cli": "^6.9.0",
    "babel-core": "^6.9.1",
    "babel-eslint": "^7.0.0",
    "babel-loader": "^6.2.4",
    "babel-plugin-transform-class-properties": "^6.9.1",
    "babel-plugin-transform-es2015-classes": "^6.9.0",
    "babel-plugin-transform-object-assign": "^6.0.0",
    "babel-plugin-transform-react-jsx": "^6.8.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "chai": "^3.5.0",
    "copyfiles": "^1.0.0",
    "diff": "^3.0.0",
    "eslint": "^3.0.0",
    "eslint-plugin-react": "^6.0.0",
    "gzip-size-cli": "^1.0.0",
    "karma": "^1.0.0",
    "karma-chai-sinon": "^0.1.5",
    "karma-mocha": "^1.0.1",
    "karma-mocha-reporter": "^2.0.3",
    "karma-phantomjs-launcher": "^1.0.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^2.0.1",
    "mkdirp": "^0.5.1",
    "mocha": "^3.0.0",
    "npm-run-all": "^3.0.0",
    "phantomjs-prebuilt": "^2.1.7",
    "preact": "^8.0.1",
    "pretty-bytes-cli": "^1.0.0",
    "rimraf": "^2.5.1",
    "rollup": "^0.41.6",
    "rollup-plugin-buble": "^0.15.0",
    "rollup-plugin-es3": "^1.0.3",
    "rollup-plugin-memory": "^2.0.0",
    "rollup-plugin-post-replace": "^1.0.0",
    "rollup-plugin-uglify": "^1.0.1",
    "sinon": "^1.17.4",
    "sinon-chai": "^2.8.0",
    "webpack": "^1.13.1"
  },
  "directories": {},
  "dist": {
    "shasum": "15402f809f7236006e40214fcffadcac409bd693",
    "tarball": "https://registry.npmjs.org/preact-router/-/preact-router-2.5.2.tgz"
  },
  "files": [
    "src",
    "dist",
    "match.js"
  ],
  "gitHead": "723294b9ffc92cc51cca572321611aa3b18fbadd",
  "homepage": "https://github.com/developit/preact-router",
  "jsnext:main": "dist/preact-router.es.js",
  "keywords": [
    "preact",
    "router"
  ],
  "license": "MIT",
  "main": "dist/preact-router.js",
  "maintainers": [
    {
      "name": "developit",
      "email": "jason@developit.ca"
    }
  ],
  "module": "dist/preact-router.es.js",
  "name": "preact-router",
  "optionalDependencies": {},
  "peerDependencies": {
    "preact": "*"
  },
  "readme": "# preact-router\n\n[![NPM](http://img.shields.io/npm/v/preact-router.svg)](https://www.npmjs.com/package/preact-router)\n[![travis-ci](https://travis-ci.org/developit/preact-router.svg)](https://travis-ci.org/developit/preact-router)\n\nConnect your [Preact] components up to that address bar.\n\n`preact-router` provides a `<Router />` component that conditionally renders its children when the URL matches their `path`. It also automatically wires up `<a />` elements to the router.\n\n> 💁 **Note:** This is not a preact-compatible version of React Router. `preact-router` is a simple URL wiring and does no orchestration for you.\n>\n> If you're looking for more complex solutions like nested routes and view composition, [react-router](https://github.com/ReactTraining/react-router) works great with preact as long as you alias in [preact-compat](https://github.com/developit/preact-compat).  React Router 4 even [works directly with Preact](http://codepen.io/developit/pen/BWxepY?editors=0010), no compatibility layer needed!\n\n#### [See a Real-world Example :arrow_right:](http://jsfiddle.net/developit/qc73v9va/)\n\n---\n\n\n### Usage Example\n\n```js\nimport Router from 'preact-router';\nimport { h, render } from 'preact';\n/** @jsx h */\n\nconst Main = () => (\n\t<Router>\n\t\t<Home path=\"/\" />\n\t\t<About path=\"/about\" />\n\t\t<Search path=\"/search/:query\" />\n\t</Router>\n);\n\nrender(<Main />, document.body);\n```\n\nIf there is an error rendering the destination route, a 404 will be displayed.\n\n### Handling URLS\n\n:information_desk_person: Pages are just regular components that get mounted when you navigate to a certain URL.\nAny URL parameters get passed to the component as `props`.\n\nDefining what component(s) to load for a given URL is easy and declarative.\nYou can even mix-and-match URL parameters and normal `props`.\n\n```js\n<Router>\n  <A path=\"/\" />\n  <B path=\"/b\" id=\"42\" />\n  <C path=\"/c/:id\" />\n  <D default />\n</Router>\n```\n\n### Lazy Loading\n\nLazy loading (code splitting) with `preact-router` can be implemented easily using the [AsyncRoute](https://www.npmjs.com/package/preact-async-route) module:\n\n```js\nimport AsyncRoute from 'preact-async-route';\n<Router>\n  <Home path=\"/\" />\n  <AsyncRoute\n    path=\"/friends\"\n    component={ () => import('./friends') }\n  />\n  <AsyncRoute\n    path=\"/friends/:id\"\n    component={ () => import('./friend') }\n    loading={ () => <div>loading...</div> }\n  />\n</Router>\n```\n\n### Active Matching & Links\n\n`preact-router` includes an add-on module called `match` that lets you wire your components up to Router changes.\n\nHere's a demo of `<Match>`, which invokes the function you pass it (as its only child) in response to any routing:\n\n```js\nimport Router from 'preact-router';\nimport Match from 'preact-router/match';\n\nrender(\n  <div>\n    <Match path=\"/\">\n      { ({ matches, path, url }) => (\n        <pre>{url}</pre>\n      ) }\n    </Match>\n    <Router>\n      <div default>demo fallback route</div>\n    </Router>\n  </div>\n)\n\n// another example: render only if at a given URL:\n\nrender(\n  <div>\n    <Match path=\"/\">\n      { ({ matches }) => matches && (\n        <h1>You are Home!</h1>\n      ) }\n    </Match>\n    <Router />\n  </div>\n)\n```\n\n`<Link>` is just a normal link, but it automatically adds and removes an \"active\" classname to itself based on whether it matches the current URL.\n\n```js\nimport { Router } from 'preact-router';\nimport { Link } from 'preact-router/match';\n\nrender(\n  <div>\n    <nav>\n      <Link activeClassName=\"active\" href=\"/\">Home</Link>\n      <Link activeClassName=\"active\" href=\"/foo\">Foo</Link>\n      <Link activeClassName=\"active\" href=\"/bar\">Bar</Link>\n    </nav>\n    <Router>\n      <div default>\n        this is a demo route that always matches\n      </div>\n    </Router>\n  </div>\n)\n```\n\n---\n\n\n### License\n\n[MIT]\n\n\n[Preact]: https://github.com/developit/preact\n[MIT]: http://choosealicense.com/licenses/mit/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/developit/preact-router.git"
  },
  "scripts": {
    "build": "npm-run-all --silent clean transpile transpile:match copy-typescript-definition size",
    "clean": "rimraf dist/",
    "copy-typescript-definition": "copyfiles -f src/index.d.ts dist",
    "lint": "eslint {src,test,test_helpers}",
    "prepublish": "npm-run-all build test",
    "release": "npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish",
    "size": "size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"",
    "test": "npm-run-all lint build test:karma",
    "test:karma": "karma start --single-run",
    "test:watch": "karma start",
    "transpile": "rollup -c --environment FORMAT:umd && rollup -c --environment FORMAT:es",
    "transpile:match": "babel src/match.js -o match.js -f umd"
  },
  "version": "2.5.2",
  "x-typings": "./dist/index.d.ts"
}
