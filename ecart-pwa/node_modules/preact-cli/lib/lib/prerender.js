'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = prerender;

var _path = require('path');

var _babelConfig = require('./babel-config');

var _babelConfig2 = _interopRequireDefault(_babelConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function prerender(config, params) {
	params = params || {};

	var entry = (0, _path.resolve)(config.cwd, config.src || 'src', 'index.js'),
	    url = params.url || '/';

	require('babel-register')(_extends({
		babelrc: false
	}, (0, _babelConfig2.default)(config, { modules: 'commonjs' })));

	global.location = { href: url, pathname: url };
	global.history = {};

	require('css-modules-require-hook')({
		rootDir: (0, _path.resolve)(config.cwd, config.src || 'src'),
		generateScopedName: '[local]__[hash:base64:5]',
		extensions: ['.less', '.css'],
		processorOpts: { parser: require('postcss-less').parse }
	});

	var _require = require('module'),
	    Module = _require.Module;

	var oldResolve = Module._resolveFilename;
	Module._resolveFilename = function (request, parent, isMain) {
		request = request.replace(/^.*\!/g, '');
		return oldResolve.call(this, request, parent, isMain);
	};

	require('./polyfills');

	var m = require(entry),
	    app = m && m.default || m;

	if (typeof app !== 'function') {
		console.warn('Entry does not export a Component function/class, aborting prerendering.');
		return '';
	}

	var preact = require('preact'),
	    renderToString = require('preact-render-to-string');

	var html = renderToString(preact.h(app, { url }));

	Module._resolveFilename = oldResolve;

	return html;
}