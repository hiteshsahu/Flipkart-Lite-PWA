'use strict';

exports.__esModule = true;
var LOGO = `
         ▄▄
     ▄▄▓▓▓▓▓▓▄▄
  ▄█▀▀█▓▓▓▓▓▓▓▀▀█▄▄
▐▓▌▐▓▓▓▒▄ ▀▄▄▓▓▓▌▐▓▌
▐▓▓▄▀▓▀ ▄▓▓▄▄▀▓▓ ▓▓▌
▐▓▓▓▌ ▒▓▌  ▐▓▓  ▓▓▓▌
▐▓▓ ▒▓▄▄▀▓▓▀ ▄▓▓ ▓▓▌
▐▓▌▐▓▓▓▀▀▄▄▀▀▓▓▓▌▐▓▌
  ▀█▄▄▒▓▓▓▓▓▓▒▄▄▒▀
      ▀▓▓▓▓▓▓▀▀
         ▀▀
`.replace(/(^\n+|\n+$)/g, '');

var color = function color(_color, text) {
	return `\u001b[${_color}m\u001b[2m${text}\u001b[22m\u001b[39m`;
};

var PURPLE = 35;

exports.default = function (text) {
	var useColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

	var logo = LOGO;

	if (text) {
		logo = logo.split('\n');

		var words = text.split(' ');
		for (var i = 0; i < words.length; i++) {
			var _index = words[i].indexOf('\n');
			if (~_index) {
				words.splice(i, 1, words[i].substring(0, _index), '\n', words[i].substring(_index + 1));
				i += 2;
			}
		}
		var index = 3,
		    start = 21,
		    max = 50;
		while (words.length && index <= 10) {
			var word = words.shift(),
			    newlines = 0;
			if (word.match(/^\n/g)) {
				index += word.length - (word = word.replace(/^\n+/g, '')).length;
				words.unshift(word);
				continue;
			}
			if (word.match(/\n/)) {
				newlines = word.length - (word = word.replace(/\n/g, '')).length;
			}
			while (logo[index].length < start - 1) {
				logo[index] += ' ';
			}if (logo[index].length + 1 + word.length > max) {
				index++;
				words.unshift(word);
				continue;
			}
			logo[index] += ' ' + word;
			if (newlines) {
				index += newlines;
			}
		}

		if (useColor) {
			for (var _index2 = 3; _index2 <= 10; _index2++) {
				logo[_index2] = color(PURPLE, logo[_index2].substring(0, start)) + color(0, logo[_index2].substring(start));
			}
		}

		logo = logo.join('\n');
	}

	if (useColor) {
		logo = color(PURPLE, logo);
	}

	return logo;
};