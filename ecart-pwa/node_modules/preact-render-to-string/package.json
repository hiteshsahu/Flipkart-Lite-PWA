{
  "_args": [
    [
      {
        "raw": "preact-render-to-string@^3.6.0",
        "scope": null,
        "escapedName": "preact-render-to-string",
        "name": "preact-render-to-string",
        "rawSpec": "^3.6.0",
        "spec": ">=3.6.0 <4.0.0",
        "type": "range"
      },
      "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\preact-cli"
    ]
  ],
  "_from": "preact-render-to-string@>=3.6.0 <4.0.0",
  "_id": "preact-render-to-string@3.6.2",
  "_inCache": true,
  "_location": "/preact-render-to-string",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/preact-render-to-string-3.6.2.tgz_1494540897401_0.5825813990086317"
  },
  "_npmUser": {
    "name": "developit",
    "email": "jason@developit.ca"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "preact-render-to-string@^3.6.0",
    "scope": null,
    "escapedName": "preact-render-to-string",
    "name": "preact-render-to-string",
    "rawSpec": "^3.6.0",
    "spec": ">=3.6.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/preact-cli"
  ],
  "_resolved": "https://registry.npmjs.org/preact-render-to-string/-/preact-render-to-string-3.6.2.tgz",
  "_shasum": "341ac493fb818ce7beac335417188b2ae8c585bb",
  "_shrinkwrap": null,
  "_spec": "preact-render-to-string@^3.6.0",
  "_where": "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\preact-cli",
  "amdName": "preactRenderToString",
  "author": {
    "name": "Jason Miller",
    "email": "jason@developit.ca"
  },
  "bugs": {
    "url": "https://github.com/developit/preact-render-to-string/issues"
  },
  "dependencies": {
    "pretty-format": "^3.5.1"
  },
  "description": "Render JSX to an HTML string, with support for Preact components.",
  "devDependencies": {
    "babel-cli": "^6.11.4",
    "babel-core": "^6.11.4",
    "babel-eslint": "^6.1.2",
    "babel-plugin-transform-class-properties": "^6.10.2",
    "babel-plugin-transform-react-jsx": "^6.8.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-es2015-minimal": "^2.0.0",
    "babel-preset-es2015-minimal-rollup": "^2.1.0",
    "babel-preset-stage-0": "^6.5.0",
    "babel-register": "^6.9.0",
    "chai": "^3.5.0",
    "eslint": "^3.2.2",
    "mocha": "^3.0.0",
    "preact": "^8.1.0",
    "rollup": "^0.34.3",
    "rollup-plugin-babel": "^2.6.1",
    "rollup-plugin-commonjs": "^3.3.1",
    "rollup-plugin-memory": "^1.0.0",
    "rollup-plugin-node-resolve": "^2.0.0",
    "sinon": "^1.17.5",
    "sinon-chai": "^2.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "341ac493fb818ce7beac335417188b2ae8c585bb",
    "tarball": "https://registry.npmjs.org/preact-render-to-string/-/preact-render-to-string-3.6.2.tgz"
  },
  "gitHead": "796da378e280b083be407251505b4adf19c6d12f",
  "homepage": "https://github.com/developit/preact-render-to-string",
  "jsnext:main": "src/index.js",
  "keywords": [
    "preact",
    "render",
    "universal",
    "isomorphic"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "developit",
      "email": "jason@developit.ca"
    }
  ],
  "name": "preact-render-to-string",
  "optionalDependencies": {},
  "peerDependencies": {
    "preact": "*"
  },
  "readme": "# preact-render-to-string\n\n[![NPM](http://img.shields.io/npm/v/preact-render-to-string.svg)](https://www.npmjs.com/package/preact-render-to-string)\n[![travis-ci](https://travis-ci.org/developit/preact-render-to-string.svg)](https://travis-ci.org/developit/preact-render-to-string)\n\nRender JSX and [Preact] components to an HTML string.\n\nWorks in Node & the browser, making it useful for universal/isomorphic rendering.\n\n\\>\\> **[Cute Fox-Related Demo](http://codepen.io/developit/pen/dYZqjE?editors=001)** _(@ CodePen)_ <<\n\n\n---\n\n\n### Render JSX/VDOM to HTML\n\n```js\nimport render from 'preact-render-to-string';\nimport { h } from 'preact';\n/** @jsx h */\n\nlet vdom = <div class=\"foo\">content</div>;\n\nlet html = render(vdom);\nconsole.log(html);\n// <div class=\"foo\">content</div>\n```\n\n\n### Render Preact Components to HTML\n\n```js\nimport render from 'preact-render-to-string';\nimport { h, Component } from 'preact';\n/** @jsx h */\n\n// Classical components work\nclass Fox extends Component {\n\trender({ name }) {\n\t\treturn <span class=\"fox\">{ name }</span>;\n\t}\n}\n\n// ... and so do pure functional components:\nconst Box = ({ type, children }) => (\n\t<div class={`box box-${type}`}>{ children }</div>\n);\n\nlet html = render(\n\t<Box type=\"open\">\n\t\t<Fox name=\"Finn\" />\n\t</Box>\n);\n\nconsole.log(html);\n// <div class=\"box box-open\"><span class=\"fox\">Finn</span></div>\n```\n\n\n---\n\n\n### Render JSX / Preact / Whatever via Express!\n\n```js\nimport express from 'express';\nimport { h } from 'preact';\nimport render from 'preact-render-to-string';\n/** @jsx h */\n\n// silly example component:\nconst Fox = ({ name }) => (\n\t<div class=\"fox\">\n\t\t<h5>{ name }</h5>\n\t\t<p>This page is all about {name}.</p>\n\t</div>\n);\n\n// basic HTTP server via express:\nconst app = express();\napp.listen(8080);\n\n// on each request, render and return a component:\napp.get('/:fox', (req, res) => {\n\tlet html = render(<Fox name={req.params.fox} />);\n\t// send it back wrapped up as an HTML5 document:\n\tres.send(`<!DOCTYPE html><html><body>${html}</body></html>`);\n});\n```\n\n\n---\n\n\n### License\n\n[MIT]\n\n\n[Preact]: https://github.com/developit/preact\n[MIT]: http://choosealicense.com/licenses/mit/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/developit/preact-render-to-string.git"
  },
  "scripts": {
    "build": "npm run -s transpile && npm run -s transpile:jsx",
    "prepublish": "npm run build",
    "release": "npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish",
    "test": "eslint {src,test} && mocha --compilers js:babel-register test/**/*.js",
    "transpile": "rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_main",
    "transpile:jsx": "ENTRY=jsx rollup -c rollup.config.js -m dist/jsx.js.map -f umd -n $npm_package_amdName src/jsx.js -o dist/jsx.js"
  },
  "version": "3.6.2"
}
