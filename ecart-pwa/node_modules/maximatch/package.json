{
  "_args": [
    [
      {
        "raw": "maximatch@^0.1.0",
        "scope": null,
        "escapedName": "maximatch",
        "name": "maximatch",
        "rawSpec": "^0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\recursive-copy"
    ]
  ],
  "_from": "maximatch@>=0.1.0 <0.2.0",
  "_id": "maximatch@0.1.0",
  "_inCache": true,
  "_location": "/maximatch",
  "_nodeVersion": "4.2.3",
  "_npmUser": {
    "name": "timkendrick",
    "email": "timkendrick@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "maximatch@^0.1.0",
    "scope": null,
    "escapedName": "maximatch",
    "name": "maximatch",
    "rawSpec": "^0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/recursive-copy"
  ],
  "_resolved": "https://registry.npmjs.org/maximatch/-/maximatch-0.1.0.tgz",
  "_shasum": "86cd8d6b04c9f307c05a6b9419906d0360fb13a2",
  "_shrinkwrap": null,
  "_spec": "maximatch@^0.1.0",
  "_where": "D:\\Git Clone Directory\\Flipkart-Lite-PWA\\ecart-pwa\\node_modules\\recursive-copy",
  "author": {
    "name": "Tim Kendrick",
    "email": "timkendrick@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/timkendrick/maximatch/issues"
  },
  "dependencies": {
    "array-differ": "^1.0.0",
    "array-union": "^1.0.1",
    "arrify": "^1.0.0",
    "minimatch": "^3.0.0"
  },
  "description": "Extends multimatch() with support for filter functions and regular expressions",
  "devDependencies": {
    "chai": "^3.4.1",
    "mocha": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "86cd8d6b04c9f307c05a6b9419906d0360fb13a2",
    "tarball": "https://registry.npmjs.org/maximatch/-/maximatch-0.1.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "c2a44e43cc11f8ede876b7ab52c9ff8dd012c05b",
  "homepage": "https://github.com/timkendrick/maximatch#readme",
  "keywords": [
    "expand",
    "find",
    "glob",
    "globbing",
    "globs",
    "match",
    "matcher",
    "minimatch",
    "multimatch",
    "pattern",
    "patterns",
    "wildcard"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "timkendrick",
      "email": "timkendrick@gmail.com"
    }
  ],
  "name": "maximatch",
  "optionalDependencies": {},
  "readme": "# maximatch [![Build Status](https://travis-ci.org/timkendrick/maximatch.svg?branch=master)](https://travis-ci.org/timkendrick/maximatch)\n\n> Extends [`multimatch()`](https://github.com/sindresorhus/multimatch) with support for filter functions and regular expressions\n\n\n## Install\n\n```sh\n\n$ npm install --save maximatch\n```\n\n\n## Usage\n\n```js\nvar maximatch = require('maximatch');\n\nmaximatch(['unicorn', 'cake', 'rainbows'], ['*', '!cake']);\n//=> ['unicorn', 'rainbows']\n\nmaximatch(['unicorn', 'cake', 'rainbows'], function(path) { return path.length > 4; });\n//=> ['unicorn', 'rainbows']\n\nmaximatch(['unicorn', 'cake', 'rainbows'], /^[^k]+$/);\n//=> ['unicorn', 'rainbows']\n\nmaximatch(['unicorn', 'cake', 'rainbows'], [function(path) { return path.charAt(0) === 'u'; }, /w/]);\n//=> ['unicorn', 'rainbows']\n```\n\nSee the [tests](https://github.com/timkendrick/multimatch/blob/master/test.js) for more usage examples and expected matches.\n\n\n## API\n\nSame as [`minimatch.match()`](https://github.com/isaacs/minimatch#minimatchmatchlist-pattern-options) except for `pattern` also accepting a filter function, a regular expression, or an array that can contain globs, filter functions and regular expressions.\n\n```js\nvar results = maximatch(paths, patterns);\n```\n\nThe return value is an array of matching paths.\n\n\n## How multiple patterns work\n\nPositive patterns (e.g. `foo` or `*`) add to the results, while negative patterns (e.g. `!foo`) subtract from the results.\n\nTherefore a lone negation (e.g. `['!foo']`) will never match anything – use `['*', '!foo']` instead.\n\n\n## Globbing patterns\n\nJust a quick overview.\n\n- `*` matches any number of characters, but not `/`\n- `?` matches a single character, but not `/`\n- `**` matches any number of characters, including `/`, as long as it's the only thing in a path part\n- `{}` allows for a comma-separated list of \"or\" expressions\n- `!` at the beginning of a pattern will negate the match\n\n\n## Related\n\nSee [globby](https://github.com/sindresorhus/globby) if you need to match against the filesystem instead of a list.\n\n\n## License\n\nMIT © [Sindre Sorhus](http://sindresorhus.com), [Jon Schlinkert](https://github.com/jonschlinkert), [Tim Kendrick](https://github.com/timkendrick)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/timkendrick/maximatch.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.1.0"
}
